/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import interfaces.IntrPrincipal;
import BDagencia.SucursalDAO;
import BDagencia.ServicioDAO;
import BDagencia.AutoDAO;
import agencia.Auto;
import agencia.Sucursal;
import metodos.Validaciones;
import java.time.LocalDate;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author usuario
 */
public class PnlAgServ extends javax.swing.JPanel
{

    /**
     * Creates new form PnlAgPin
     */
    JTextField re = new JTextField();

    public PnlAgServ()
    {
        initComponents();
        List<Sucursal> sucursalesDisponibles = SucursalDAO.desplegarTodasLasSucursales();
        for (int i = 0; i < sucursalesDisponibles.size(); i++)
        {
            desSuc.addItem(sucursalesDisponibles.get(i).getNombre());
        }
        re.setBorder(modAuto.getBorder());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        modelo = new javax.swing.JLabel();
        modAuto = new javax.swing.JTextField();
        pAuto = new javax.swing.JLabel();
        placas = new javax.swing.JTextField();
        color = new javax.swing.JLabel();
        btnAg = new javax.swing.JButton();
        desSuc = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tipServ = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        prsu = new javax.swing.JTextField();
        anioAuto = new javax.swing.JTextField();
        modelo1 = new javax.swing.JLabel();
        pag = new javax.swing.JComboBox<>();
        menErrorM = new javax.swing.JLabel();
        menErrorA = new javax.swing.JLabel();
        menErrorP = new javax.swing.JLabel();
        menErrorTS = new javax.swing.JLabel();
        menErrorPr = new javax.swing.JLabel();

        setBackground(new java.awt.Color(226, 222, 219));
        addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                formMouseClicked(evt);
            }
        });

        modelo.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
        modelo.setText("Ingrese el modelo del auto:");

        modAuto.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        modAuto.setForeground(new java.awt.Color(153, 153, 153));
        modAuto.setText("Ingresa el modelo del auto.");
        modAuto.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                modAutoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                modAutoFocusLost(evt);
            }
        });
        modAuto.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                modAutoActionPerformed(evt);
            }
        });
        modAuto.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                modAutoKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                modAutoKeyPressed(evt);
            }
        });

        pAuto.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
        pAuto.setText("Ingrese las placas del auto:");

        placas.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        placas.setForeground(new java.awt.Color(153, 153, 153));
        placas.setText("XXX-XXX-XXX");
        placas.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                placasFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                placasFocusLost(evt);
            }
        });
        placas.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                placasKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                placasKeyPressed(evt);
            }
        });

        color.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        color.setText("Pagado: ");

        btnAg.setBackground(new java.awt.Color(51, 153, 255));
        btnAg.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnAg.setText("Agregar");
        btnAg.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 102, 255), 1, true));
        btnAg.setBorderPainted(false);
        btnAg.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnAg.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnAgActionPerformed(evt);
            }
        });

        desSuc.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        desSuc.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                desSucMouseClicked(evt);
            }
        });
        desSuc.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                desSucActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Mapa.png"))); // NOI18N
        jLabel1.setText("Sucursal:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
        jLabel2.setText("Tipo de servicio:");

        tipServ.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        tipServ.setForeground(new java.awt.Color(153, 153, 153));
        tipServ.setText("Ingresa el tipo de servicio.");
        tipServ.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                tipServFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                tipServFocusLost(evt);
            }
        });
        tipServ.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                tipServActionPerformed(evt);
            }
        });
        tipServ.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                tipServKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                tipServKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
        jLabel3.setText("Presupuesto:");

        prsu.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        prsu.setForeground(new java.awt.Color(153, 153, 153));
        prsu.setText("$$$$$");
        prsu.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                prsuFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                prsuFocusLost(evt);
            }
        });
        prsu.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                prsuActionPerformed(evt);
            }
        });
        prsu.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                prsuKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                prsuKeyPressed(evt);
            }
        });

        anioAuto.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        anioAuto.setForeground(new java.awt.Color(153, 153, 153));
        anioAuto.setText("AAAA");
        anioAuto.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                anioAutoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                anioAutoFocusLost(evt);
            }
        });
        anioAuto.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                anioAutoActionPerformed(evt);
            }
        });
        anioAuto.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                anioAutoKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                anioAutoKeyPressed(evt);
            }
        });

        modelo1.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
        modelo1.setText("Ingrese el año del auto:");

        pag.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        pag.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NO", "SI" }));
        pag.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                pagFocusGained(evt);
            }
        });

        menErrorM.setForeground(new java.awt.Color(255, 0, 0));

        menErrorA.setForeground(new java.awt.Color(255, 0, 0));

        menErrorP.setForeground(new java.awt.Color(255, 0, 0));

        menErrorTS.setForeground(new java.awt.Color(255, 0, 0));

        menErrorPr.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(menErrorA, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(218, 218, 218))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(pAuto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(menErrorP, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(placas, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(179, 179, 179))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(color)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(317, 317, 317))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(191, 191, 191)
                        .addComponent(btnAg, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(209, 209, 209)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(desSuc, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(modelo1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(anioAuto, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(menErrorTS, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tipServ, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(modelo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(menErrorM, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(modAuto, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(242, 242, 242)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(menErrorPr, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(prsu, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(158, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(desSuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modAuto, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modelo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(menErrorM, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(anioAuto, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modelo1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(menErrorA, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(placas, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pAuto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(menErrorP, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tipServ, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(menErrorTS, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prsu, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(menErrorPr, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(color)
                    .addComponent(pag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(btnAg, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void modAutoKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_modAutoKeyPressed
    {//GEN-HEADEREND:event_modAutoKeyPressed
        if (evt.getKeyChar() == '\n')
        {
            if (modAuto.getText().equals(""))
            {
                modAuto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 2));
                menErrorM.setText("Llenar el campo de texto");
            }
            anioAuto.requestFocus();
        }
    }//GEN-LAST:event_modAutoKeyPressed

    private void placasKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_placasKeyPressed
    {//GEN-HEADEREND:event_placasKeyPressed
        if (evt.getKeyChar() == '\n')
        {
            if (placas.getText().equals(""))
            {
                placas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 2));
                menErrorP.setText("Llenar el campo de texto");
            }
            tipServ.requestFocus();
        }
    }//GEN-LAST:event_placasKeyPressed

    private void btnAgActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnAgActionPerformed
    {//GEN-HEADEREND:event_btnAgActionPerformed
        if (IntrPrincipal.getSuc().size() != 0)
        {
            if (Validaciones.pinError(modAuto, menErrorM, "Ingresa el modelo del auto.", "Llenar el campo de texto", false)
                    && Validaciones.pinError(anioAuto, menErrorA, "AAAA", anioAuto.getText().equals("AAAA")
                            ? "Llenar el campo de texto" : "Ingresa bien el año", anioAuto.getText().length() < 4 ? true : false)
                    && Validaciones.pinError(placas, menErrorP, "XXX-XXX-XXX", "Llenar el campo de texto", false)
                    && Validaciones.pinError(tipServ, menErrorTS, "Ingresa el tipo de servicio.", "Llenar el campo de texto", false)
                    && Validaciones.pinError(prsu, menErrorPr, "$$$$$", "Llenar el campo de texto", false))
            {
                /*IntrPrincipal.getAut().get(desSuc.getSelectedIndex()).add(new Servicio(tipServ.getText(),
                        Integer.parseInt(prsu.getText()), ((String) pag.getSelectedItem()).toCharArray(),
                        modAuto.getText(), Integer.parseInt(anioAuto.getText()), placas.getText()));*/
                
                // Crear un objeto Auto con los datos ingresados
                Sucursal sucSel = new Sucursal(desSuc.getSelectedItem().toString());
                
                Auto auto = new Auto(
                        modAuto.getText(),
                        Integer.parseInt(anioAuto.getText()),
                        placas.getText(),
                        sucSel
                );
                if(!AutoDAO.guardarAuto(auto)){
                    JOptionPane.showMessageDialog(this, "No se pudo registrar el auto correctamente");
                }
                else{
                    boolean pagado;
                    if("SI".equals(pag.getSelectedItem().toString()))
                        pagado = true;
                    else
                        pagado = false;
                    
                    if(ServicioDAO.guardarServicio(tipServ.getText(), pagado, Integer.parseInt(prsu.getText()), auto.getPlacas())){
                        JOptionPane.showMessageDialog(this, "Se registro con exito el auto y el servicio", "Exito", JOptionPane.INFORMATION_MESSAGE);
                        modAuto.setText("");
                        modAutoFocusLost(null);
                        anioAuto.setText("");
                        anioAutoFocusLost(null);
                        placas.setText("");
                        placasFocusLost(null);
                        tipServ.setText("");
                        tipServFocusLost(null);
                        prsu.setText("");
                        prsuFocusLost(null);
                        pag.setSelectedIndex(0);
                        btnAg.requestFocus();
                    }
                    else{
                        JOptionPane.showMessageDialog(this, "No se pudo registrar el servicio correctamente");
                    }
                }
                System.out.println("Después de llamar a guardarAuto");

                System.out.println("Antes de llamar a guardarAuto");
                
            }
        }else
        {
            JOptionPane.showMessageDialog(this, "No hay sucursales registradas", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAgActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_formMouseClicked
    {//GEN-HEADEREND:event_formMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseClicked

    private void desSucMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_desSucMouseClicked
    {//GEN-HEADEREND:event_desSucMouseClicked

    }//GEN-LAST:event_desSucMouseClicked

    private void desSucActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_desSucActionPerformed
    {//GEN-HEADEREND:event_desSucActionPerformed

    }//GEN-LAST:event_desSucActionPerformed

    private void tipServActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_tipServActionPerformed
    {//GEN-HEADEREND:event_tipServActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipServActionPerformed

    private void prsuActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_prsuActionPerformed
    {//GEN-HEADEREND:event_prsuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prsuActionPerformed

    private void anioAutoKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_anioAutoKeyPressed
    {//GEN-HEADEREND:event_anioAutoKeyPressed
        if (evt.getKeyChar() == '\n')
        {
            if (anioAuto.getText().equals(""))
            {
                anioAuto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 2));
                menErrorA.setText("Llenar el campo de texto");
            }
            placas.requestFocus();
        }
    }//GEN-LAST:event_anioAutoKeyPressed

    private void modAutoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_modAutoActionPerformed
    {//GEN-HEADEREND:event_modAutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modAutoActionPerformed

    private void tipServKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_tipServKeyPressed
    {//GEN-HEADEREND:event_tipServKeyPressed
        if (evt.getKeyChar() == '\n')
        {
            if (tipServ.getText().equals(""))
            {
                tipServ.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 2));
                menErrorTS.setText("Llenar el campo de texto");
            }
            prsu.requestFocus();
        }
    }//GEN-LAST:event_tipServKeyPressed

    private void anioAutoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_anioAutoActionPerformed
    {//GEN-HEADEREND:event_anioAutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_anioAutoActionPerformed

    private void modAutoKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_modAutoKeyTyped
    {//GEN-HEADEREND:event_modAutoKeyTyped
        Validaciones.va(evt, 25, modAuto.getText());
        if (evt.getKeyChar() != ' ' && evt.getKeyChar() != '\n' && evt.getKeyChar() != ((char) 8))
        {
            menErrorM.setText("");
            modAuto.setBorder(re.getBorder());
        }
        if (modAuto.getText().equals("") && evt.getKeyChar() == ' ')
        {
            evt.consume();
        }
    }//GEN-LAST:event_modAutoKeyTyped

    private void modAutoFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_modAutoFocusLost
    {//GEN-HEADEREND:event_modAutoFocusLost
        if (modAuto.getText().equals("") || !Validaciones.valPal(modAuto.getText()))
        {
            modAuto.setForeground(new java.awt.Color(153, 153, 153));
            modAuto.setText("Ingresa el modelo del auto.");
        }
    }//GEN-LAST:event_modAutoFocusLost

    private void modAutoFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_modAutoFocusGained
    {//GEN-HEADEREND:event_modAutoFocusGained
        if (modAuto.getText().equals("Ingresa el modelo del auto."))
        {
            modAuto.setText("");
            modAuto.setForeground(new java.awt.Color(0, 0, 0));
        }
    }//GEN-LAST:event_modAutoFocusGained

    private void anioAutoKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_anioAutoKeyTyped
    {//GEN-HEADEREND:event_anioAutoKeyTyped
        Validaciones.validaEntero(evt, 4, anioAuto.getText());
        if (evt.getKeyChar() != ' ' && evt.getKeyChar() != '\n' && evt.getKeyChar() != ((char) 8))
        {
            menErrorA.setText("");
            anioAuto.setBorder(re.getBorder());
        }
        if (evt.getKeyChar() == ' ')
        {
            evt.consume();
        }
    }//GEN-LAST:event_anioAutoKeyTyped

    private void anioAutoFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_anioAutoFocusLost
    {//GEN-HEADEREND:event_anioAutoFocusLost
        if (anioAuto.getText().equals("") || !Validaciones.valPal(anioAuto.getText()))
        {
            anioAuto.setForeground(new java.awt.Color(153, 153, 153));
            anioAuto.setText("AAAA");
        }
        if (anioAuto.getText().length() < 4)
        {
            anioAuto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 2));
            menErrorA.setText("Ingresa bien el año");
        }
    }//GEN-LAST:event_anioAutoFocusLost

    private void anioAutoFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_anioAutoFocusGained
    {//GEN-HEADEREND:event_anioAutoFocusGained
        if (anioAuto.getText().equals("AAAA"))
        {
            anioAuto.setText("");
            anioAuto.setForeground(new java.awt.Color(0, 0, 0));
        }
    }//GEN-LAST:event_anioAutoFocusGained

    private void placasKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_placasKeyTyped
    {//GEN-HEADEREND:event_placasKeyTyped
        if (evt.getKeyChar() != ' ' && evt.getKeyChar() != '\n' && evt.getKeyChar() != ((char) 8))
        {
            menErrorP.setText("");
            placas.setBorder(re.getBorder());
        }
        Validaciones.vaP(evt, 11, placas.getText());
        if ( evt.getKeyChar() == ' ')
        {
            evt.consume();
        }
    }//GEN-LAST:event_placasKeyTyped

    private void tipServFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_tipServFocusLost
    {//GEN-HEADEREND:event_tipServFocusLost
        if (tipServ.getText().equals("") || !Validaciones.valPal(tipServ.getText()))
        {
            tipServ.setForeground(new java.awt.Color(153, 153, 153));
            tipServ.setText("Ingresa el tipo de servicio.");
        }
    }//GEN-LAST:event_tipServFocusLost

    private void placasFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_placasFocusLost
    {//GEN-HEADEREND:event_placasFocusLost
        if (placas.getText().equals("") || !Validaciones.valPal(placas.getText()))
        {
            placas.setForeground(new java.awt.Color(153, 153, 153));
            placas.setText("XXX-XXX-XXX");
        }
    }//GEN-LAST:event_placasFocusLost

    private void placasFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_placasFocusGained
    {//GEN-HEADEREND:event_placasFocusGained
        if (placas.getText().equals("XXX-XXX-XXX"))
        {
            placas.setText("");
            placas.setForeground(new java.awt.Color(0, 0, 0));
        }
    }//GEN-LAST:event_placasFocusGained

    private void tipServKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_tipServKeyTyped
    {//GEN-HEADEREND:event_tipServKeyTyped
        Validaciones.va(evt, 30, tipServ.getText());
        if (evt.getKeyChar() != ' ' && evt.getKeyChar() != '\n' && evt.getKeyChar() != ((char) 8))
        {
            menErrorTS.setText("");
            tipServ.setBorder(re.getBorder());
        }
        if (tipServ.getText().equals("") && evt.getKeyChar() == ' ')
        {
            evt.consume();
        }
    }//GEN-LAST:event_tipServKeyTyped

    private void tipServFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_tipServFocusGained
    {//GEN-HEADEREND:event_tipServFocusGained
        if (tipServ.getText().equals("Ingresa el tipo de servicio."))
        {
            tipServ.setText("");
            tipServ.setForeground(new java.awt.Color(0, 0, 0));
        }
    }//GEN-LAST:event_tipServFocusGained

    private void prsuKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_prsuKeyTyped
    {//GEN-HEADEREND:event_prsuKeyTyped
        Validaciones.validaEntero(evt, 7, prsu.getText());
        if (evt.getKeyChar() != ' ' && evt.getKeyChar() != '\n' && evt.getKeyChar() != ((char) 8))
        {
            menErrorPr.setText("");
            prsu.setBorder(re.getBorder());
        }
        if (evt.getKeyChar() == ' ')
        {
            evt.consume();
        }
    }//GEN-LAST:event_prsuKeyTyped

    private void prsuKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_prsuKeyPressed
    {//GEN-HEADEREND:event_prsuKeyPressed
        if (evt.getKeyChar() == '\n')
        {
            if (prsu.getText().equals(""))
            {
                prsu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 2));
                menErrorPr.setText("Llenar el campo de texto");
            }
            pag.requestFocus();
        }
    }//GEN-LAST:event_prsuKeyPressed

    private void prsuFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_prsuFocusLost
    {//GEN-HEADEREND:event_prsuFocusLost
        if (prsu.getText().equals("") || !Validaciones.valPal(prsu.getText()))
        {
            prsu.setForeground(new java.awt.Color(153, 153, 153));
            prsu.setText("$$$$$");
        }
    }//GEN-LAST:event_prsuFocusLost

    private void prsuFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_prsuFocusGained
    {//GEN-HEADEREND:event_prsuFocusGained
        if (prsu.getText().equals("$$$$$"))
        {
            prsu.setText("");
            prsu.setForeground(new java.awt.Color(0, 0, 0));
        }
    }//GEN-LAST:event_prsuFocusGained

    private void pagFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_pagFocusGained
    {//GEN-HEADEREND:event_pagFocusGained

    }//GEN-LAST:event_pagFocusGained


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField anioAuto;
    private javax.swing.JButton btnAg;
    private javax.swing.JLabel color;
    private javax.swing.JComboBox<String> desSuc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel menErrorA;
    private javax.swing.JLabel menErrorM;
    private javax.swing.JLabel menErrorP;
    private javax.swing.JLabel menErrorPr;
    private javax.swing.JLabel menErrorTS;
    private javax.swing.JTextField modAuto;
    private javax.swing.JLabel modelo;
    private javax.swing.JLabel modelo1;
    private javax.swing.JLabel pAuto;
    private javax.swing.JComboBox<String> pag;
    private javax.swing.JTextField placas;
    private javax.swing.JTextField prsu;
    private javax.swing.JTextField tipServ;
    // End of variables declaration//GEN-END:variables
}
